@mixin font-size($size, $lineHeight: $size) {
  font-size: $size;

  @if $lineHeight == 0 {
    line-height: 1;
  }

  @else {
    line-height: calc($lineHeight / $size);
  }
}

@mixin flex-width($width) {
  width: $width;
  max-width: $width;
  flex: 0 0 $width;
  min-width: 1px;
}

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin absolute-layer() {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

@mixin hyphens($symbol: '-') {
  word-wrap: break-word;
  overflow-wrap: break-word;
  // stylelint-disable
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  // stylelint-enable
  hyphens: auto;
  hyphenate-character: $symbol;
}

@mixin text-overflow($value: 1) {
  @if $value == 0 {
    max-width: unset;
    overflow: unset;
    text-overflow: unset;
    white-space: unset;
  }

  @else {
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}

@mixin line-clamp($lines: 3) {
  @if $lines == 0 {
    display: block;
    /* autoprefixer: off */
    -webkit-line-clamp: none;
    -webkit-box-orient: initial;
    /* autoprefixer: on */
    overflow: unset;
    text-overflow: unset;
    word-wrap: unset;
  }

  @else {
    // stylelint-disable
    /* autoprefixer: off */
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    /* autoprefixer: on */
    // stylelint-enable
    overflow: hidden;
    text-overflow: ellipsis;
    word-wrap: break-word;
  }
}

@mixin hide-scroll {
  -ms-overflow-style: none;
  scrollbar-width: none;
  overscroll-behavior: contain;

  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin img-cover() {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  user-select: none;
}

@mixin safari-radius() {
  // Fix overflow from bd radius
  // stylelint-disable
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  -webkit-mask-image: -webkit-radial-gradient(#fff, #000);
  // stylelint-enable
}

@mixin better-fonts() {
  // For dark backgrounds
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin btn-reset() {
  border: 0;
  background: transparent;
  margin: 0;
  padding: 0;
  user-select: none;
}

@mixin select-reset() {
  // stylelint-disable
  -webkit-appearance: none;
  -moz-appearance: none;
  // stylelint-enable
  appearance: none;
  text-indent: 1px;
  text-overflow: '';

  &::-ms-expand {
    display: none;
  }
}

@mixin blur($val) {
  // stylelint-disable
  -webkit-backdrop-filter: blur($val);
  // stylelint-enable
  backdrop-filter: blur($val);
  will-change: backdrop-filter;
}

@mixin visually-hidden {
  visibility: hidden;
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  clip: rect(0 0 0 0);
}

// @mixin adaptiv-font($pcSize, $mobSize, $moreMaxWidth: true) {
//   $addSize: $pcSize - $mobSize;
//   $maxWidth: $page-max-width - $page-min-width;
//   @if $moreMaxWidth {
//     font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - #{$page-min-width + px}) / #{$maxWidth}));
//   }
//   @if $moreMaxWidth == false {
//     font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - #{$page-min-width + px}) / #{$maxWidth}));
//     @media only screen and (min-width: calc(#{rem($maxWidth + 1px)})) {
//       font-size: $pcSize+px;
//     }
//   }
// }

//адаптивное значение в диапазоне  минимальной и максимальной ширины макета
/**
* Пример использования в стилях:
* @include fluid(margin-top,40, 24) - без остановки на максимальной ширине макета
* @include fluid(margin-top,40, 24, false) - с остановкой роста на максимальной ширине макета
*
* @param {string} $property - css свойство, которое хотим добавить
* @param {number} $pcSize - максимальное значение в пикселях
* @param {number} $mobSize - минимальное значение в пикселях
* @param {boolean} $moreMaxWidth - добавляет медиазапрос на максимальной ширине макета, и свойство($property) останавливается в росте.
*/

@mixin fluid($property, $pcSize, $mobSize, $moreMaxWidth: false) {
  $addSize: $pcSize - $mobSize;
  $maxWidth: $page-max-width - $page-min-width;
  @if $moreMaxWidth == true {
    #{$property}: calc(#{$mobSize + px} + #{$addSize} * ((100vw - #{$page-min-width + px}) / #{$maxWidth}));
  }
  @if $moreMaxWidth == false {
    #{$property}: calc(#{$mobSize + px} + #{$addSize} * ((100vw - #{$page-min-width + px}) / #{$maxWidth}));
    @media only screen and (min-width: calc(#{rem($maxWidth + 1px)})) {
      #{$property}: $pcSize+px;
    }
  }
}
